[versions]
agp = "8.13.0"
firebaseCrashlyticsPlugin = "3.0.6"
googleServices = "4.4.3"
ossLicensesPlugin = "0.10.9"
appcompat = "1.7.1"
appUpdate = "2.1.0"
billing = "8.0.0"
constraintlayout = "2.2.1"
coreSplashscreen = "1.0.1"
core = "4.6.2"
coreTesting = "2.2.0"
firebaseBom = "34.3.0"
gridlayout = "1.1.0"
junit = "4.13.2"
library = "1.3.0"
libraryVersion = "1.4.0"
lifecycle = "2.9.4"
lottie = "6.6.9"
mockitoCore = "5.19.0"
mockitoInline = "5.2.0"
navigationUi = "2.9.5"
preference = "1.2.1"
review = "2.0.2"
volley = "1.2.1"
coreKtx = "1.17.0"
material = "1.14.0-alpha05"
multidex = "2.0.1"
playServicesAds = "24.6.0"
playServicesOssLicenses = "17.3.0"
codeview = "1.3.9"
hilt = "2.57.1"
room = "2.8.1"
glide = "5.0.5"
retrofit = "3.0.0"

[libraries]
# AndroidX & Material
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintlayout" }
androidx-core = { module = "androidx.core:core", version.ref = "coreKtx" }
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreen" }
androidx-gridlayout = { module = "androidx.gridlayout:gridlayout", version.ref = "gridlayout" }
androidx-multidex = { module = "androidx.multidex:multidex", version.ref = "multidex" }
androidx-navigation-fragment = { module = "androidx.navigation:navigation-fragment", version.ref = "navigationUi" }
androidx-preference = { module = "androidx.preference:preference", version.ref = "preference" }
androidx-navigation-ui = { module = "androidx.navigation:navigation-ui", version.ref = "navigationUi" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
material = { module = "com.google.android.material:material", version.ref = "material" }
materialratingbar-library = { module = "me.zhanghai.android.materialratingbar:library", version.ref = "libraryVersion" }
library = { module = "me.zhanghai.android.fastscroll:library", version.ref = "library" }
codeview = { module = "io.github.amrdeveloper:codeview", version.ref = "codeview" }

# Lifecycle
androidx-lifecycle-livedata = { module = "androidx.lifecycle:lifecycle-livedata", version.ref = "lifecycle" }
androidx-lifecycle-process = { module = "androidx.lifecycle:lifecycle-process", version.ref = "lifecycle" }
androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime", version.ref = "lifecycle" }
androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "lifecycle" }

# Firebase & Play Services
firebase-analytics = { module = "com.google.firebase:firebase-analytics" }
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics" }
google-firebase-perf = { module = "com.google.firebase:firebase-perf" }
play-services-ads = { module = "com.google.android.gms:play-services-ads", version.ref = "playServicesAds" }
play-services-oss-licenses = { module = "com.google.android.gms:play-services-oss-licenses", version.ref = "playServicesOssLicenses" }

# Networking (Retrofit)
retrofit2 = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit2-converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }

# DI (Hilt)
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }

# Utility
app-update = { module = "com.google.android.play:app-update", version.ref = "appUpdate" }
billing = { module = "com.android.billingclient:billing", version.ref = "billing" }
core = { module = "io.noties.markwon:core", version.ref = "core" }
lottie = { module = "com.airbnb.android:lottie", version.ref = "lottie" }
review = { module = "com.google.android.play:review", version.ref = "review" }
volley = { module = "com.android.volley:volley", version.ref = "volley" }
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
glide-compiler = { module = "com.github.bumptech.glide:compiler", version.ref = "glide" }

# --- TESTING ---
# Unit Tests (test folder)
junit = { module = "junit:junit", version.ref = "junit" }
androidx-core-testing = { module = "androidx.arch.core:core-testing", version.ref = "coreTesting" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockitoCore" }
mockito-inline = { module = "org.mockito:mockito-inline", version.ref = "mockitoInline" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
googleServices = { id = "com.google.gms.google-services", version.ref = "googleServices" }
firebaseCrashlytics = { id = "com.google.firebase.crashlytics", version.ref = "firebaseCrashlyticsPlugin" }
hiltAndroid = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
ossLicenses = { id = "com.google.android.gms.oss-licenses-plugin", version.ref = "ossLicensesPlugin" }

[bundles]
# Google Play services and related UI components
google-core = [
    "material",
    "play-services-ads",
    "play-services-oss-licenses",
    "review",
    "app-update",
    "billing",
]

# Firebase services (requires applying the BOM separately)
firebase-services = [
    "firebase-crashlytics",
    "firebase-analytics",
    "google-firebase-perf",
]

# Core AndroidX building blocks
androidx-core = [
    "androidx-appcompat",
    "androidx-constraintlayout",
    "androidx-core",
    "androidx-core-splashscreen",
    "androidx-gridlayout",
    "androidx-navigation-fragment",
    "androidx-navigation-ui",
    "androidx-preference",
    "androidx-room-runtime",
    "androidx-multidex",
]

# Lifecycle-aware AndroidX components
androidx-lifecycle = [
    "androidx-lifecycle-runtime",
    "androidx-lifecycle-process",
    "androidx-lifecycle-livedata",
    "androidx-lifecycle-viewmodel",
]

# Shared UI tooling and visuals
ui-toolkit = [
    "core",
    "lottie",
    "library",
    "materialratingbar-library",
    "codeview",
    "glide",
]

# Networking and serialization stack
networking = [
    "retrofit2",
    "retrofit2-converter-gson",
    "volley",
]

# For local tests on the JVM (test sourceSet)
unitTest = [
    "junit",
    "androidx-core-testing",
    "mockito-core",
    "mockito-inline",
]
